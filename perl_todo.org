* Plan for Perl6 kaldi data formatter

** Here's the file Structure

*** Code root
**** |-RawAudio*
**** |-RawData*
**** |-AudioData
***** |-test
****** |-speaker_1
****** |-speaker_n
***** |-train
****** |-speaker_1
****** |-speaker_n
**** |-Data
***** -local
****** |-dict
******* |-lexicon.txt
******* |-nonsilence_phones.txt
******* |-silence_phones.txt
******* |-optional_silence.txt
****** |-corpus.txt
***** |-test
****** |-spk2gender
****** |-spk2utt
****** |-text
****** |-utt2spk
***** |-train
****** |-spk2gender
****** |-spk2utt
****** |-text
****** |-utt2spk
**** |-conf
**** |-local
**** |-steps
**** |-utils
***** |-mfcc.conf
***** |-decode.config
**** |-process_data.pl6
**** |-path.sh
**** |-cmd.sh
**** |-run.sh

** TODO Here are the Tasks
1. [ ] Create test and train speakers from folders
2. [ ] For each speaker get/generate files
*** TODO Phase 1: Audio files
1. [ ] ASSIGN SPEAKERS TO TRAIN AND TEST - is based on speakers set
   - [ ] format=gender_sid_utt_0 or 1 (meaning train/test)
     + Note this is a manual step or through some other code
   - [ ] Copy and rename raw audio files
2. [ ] FOLDER CREATION - is based on speakers set
   1. [ ] Get all files from RawAudio folder into speaker set
3. [ ] POPULATE FOLDERS/COPY FILES - from central repository based on prefix
   - Use Sox/ffmpeg to convert and mov files into folder
*** TODO Phase 1b: Python files
1. [ ] For each audio file get equivalent text file
   - [ ] For Okrika get from db or manually
   - [ ] For pidgin - get from web
     + I also need to do a speaker to utt spreadsheet (gsheet) |bk|ch|vs|spkr|file|
     + perform speaker diarization on files for kaldi setup if possible skip this 
2. [ ] Generate corpus.txt
*** TODO Phase 2: Data files
1. [ ] Copy raw text files
2. [ ] GENERATE the ff:
   1. [ ] spk2gender{sid gender},
   2. [ ] wav.scp{uid path},
   3. [ ] text{uid utt},
   4. [ ] utt2spk{uid sid},
   5. [ ] corpus.txt
   6. [ ] path.sh
*** TODO Phase 3: Manual Steps
1. [ ] Copy the ff folders from another example
   1. [ ] local
   2. [ ] utils
   3. [ ] conf
   4. [ ] steps
2. [ ] Copy the following files
   1. [ ] path.sh
   2. [ ] run.sh
   3. [ ] cmd.sh

  
** Here are some data files
- F_Iyeneomi_luke13-15a_0.ogg
- F_Iyeneomi_luke13-15b_1.ogg
- F_Iyeneomi_luke13-15c_0.ogg
- F_Iyeneomi_luke13-15d_0.ogg
- F_Iyeneomi_luke13-15e_0.ogg
- F_Iyeneomi_luke13-15f_0.ogg
- M_agoma_acts17-20a_0.ogg
- M_agoma_acts17-20b_0.ogg
- M_agoma_acts17-20c_0.ogg
- M_agoma_acts17-20d_0.ogg
- M_agoma_acts17-20e_0.ogg
- M_agoma_acts17-20f_0.ogg
- M_agoma_acts17-20g_0.ogg
- M_agoma_acts17-20h_0.ogg
- M_agoma_acts17-20i_0.ogg
- M_agoma_acts17-20j_0.ogg
- M_agoma_acts17-20k_1.ogg
- M_stanley_mark1-4a_1.amr
- M_stanley_mark1-4b_0.amr
- M_stanley_mark1-4c_0.amr
- M_stanley_mark1-4d_0.amr
